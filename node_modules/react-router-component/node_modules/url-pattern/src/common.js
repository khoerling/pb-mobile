// Generated by CoffeeScript 1.7.1
var common,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

module.exports = common = {
  getNames: function(arg) {
    var name, names, regex, results;
    if (arg instanceof RegExp) {
      return [];
    }
    regex = /((:?:[^\/]+)|(?:[\*]))/g;
    names = [];
    results = regex.exec(arg);
    while (results != null) {
      name = results[1].slice(1);
      if (name === '_') {
        throw new TypeError(":_ can't be used as a pattern name in pattern " + arg);
      }
      if (__indexOf.call(names, name) >= 0) {
        throw new TypeError("duplicate pattern name :" + name + " in pattern " + arg);
      }
      names.push(name || '_');
      results = regex.exec(arg);
    }
    return names;
  },
  toRegexString: function(arg) {
    common.getNames(arg).forEach(function(name) {
      return arg = arg.replace(':' + name, '([^\/]+)');
    });
    return '^' + arg.replace(/\*/g, '(.*)') + '$';
  }
};
